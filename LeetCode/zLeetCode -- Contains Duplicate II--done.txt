题目描述：
Given an array of integers and an integer k, find out whether there are two distinct indices i and j in the array such that nums[i] = nums[j] and the difference between i and j is at most k.

在一个数组nums中试着找到两个数nums[i]和nums[j]，其中,i与j的距离要小于等于k。如果找到，返回true，否则返回false。

思路：

一次遍历num[i...n)，哈希存每个数的位置，如果nums[i]已经出现，就判断上次出现的位置与当前位置的距离是否小于等于k。如果是，返回true；否则，更新Hash[nums[i]]的位置=i。



实现代码：


public class Solution {
    public bool ContainsNearbyDuplicate(int[] nums, int k) 
    {
        var hash = new Dictionary<int, int>();
    	for(var i = 0;i < nums.Length; i++){
    		if(!hash.ContainsKey(nums[i])){
    			hash.Add(nums[i],i);
    		}
    		else{
    			if(Math.Abs(hash[nums[i]] - i) <= k){
    				return true;
    			}
    			else{
    				hash[nums[i]] = i;
    			}
    		}
    	}
    	
    	return false;
    }
}