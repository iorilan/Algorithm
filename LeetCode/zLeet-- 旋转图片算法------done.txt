public class Solution {
    
 private static bool IsMatrix(int[,] matrix){
 	if(matrix == null){
		return false;
	}
	
	for(var i = 0;i < matrix.GetLength(0); i++){
		if(matrix.GetLength(1) != matrix.GetLength(0)){
			return false;
		}
	}
	
	return true;
 }
 // clock direction
 public void Rotate(int[,] matrix) 
 {
     if(!IsMatrix(matrix)){
	 	return;
	 }
	 
	 var n = matrix.GetLength(0) - 1;
	 for(var i = 0;i <= n/2 + 1 ;i ++){
	 	for(var j = i;j < n-i; j++){
			var t = matrix[i,j];
			matrix[i,j] = matrix[n-j,i];
			matrix[n-j,i] = matrix[n-i,n-j];
			matrix[n-i,n-j] = matrix[j,n-i];
			matrix[j,n-i] = t;
			
		}
		
	 }
 }
}