题目描述：

Given a binary tree and a sum, determine if the tree has a root-to-leaf path such that adding up all the values along the path equals the given sum.

For example:
Given the below binary tree and sum = 22,
              5
             / \
            4   8
           /   / \
          11  13  4
         /  \      \
        7    2      1
return true, as there exist a root-to-leaf path 5->4->11->2 which sum is 22.


就是从根到叶子，判断是否存在和为sum的路径。

思路：

一道典型的DFS题，遍历时累加当前节点数即可。

实现代码：


public bool HasPathSum(TreeNode root, int sum) {
        Find(root, 0, sum);
        return found;
    }
    
    private bool found = false;
    
    private void Find(TreeNode node, int sum, int target){
        if(found || node == null){
            return;
        }
        if(node.left == null && node.right == null){
		if(sum + node.val == target){
            		found = true;
        	}
	}
        
        
        Find(node.left, sum + node.val, target);
        Find(node.right, sum + node.val, target);
    }