题目描述：
Given an index k, return the kth row of the Pascal's triangle.

For example, given k = 3,
Return [1,3,3,1].

返回一个帕斯卡三角形的第n行。

思路：
本题的实现比较直接，只要了解帕斯卡三角形的构成就可以实现了。
1.初始化nums为{1,1}，对应的行为1。
2.对于i∈[1,rowIndex):
首位和末尾添加1；相邻项（nums[i],nums[i+1]）相加构成nums[i]的新值。


实现代码：



public class Solution {
    public IList<int> GetRow(int rowIndex) 
    {
        if(rowIndex == 0){
    		return new List<int>(){1};
    	}
    	if(rowIndex == 1){
    		return new List<int>(){1,1};
    	}
    	
    	var list = new List<int>(){1,1};
    	for(var i = 1;i < rowIndex; i++){
    		var r = new List<int>();
    		r.Add(1);
    		for(var j = 0;j < list.Count - 1; j++){
    			r.Add(list[j] + list[j+1]);
    		}
    		r.Add(1);
    		
    		list = r;
    	}
    	
    	return list;    
    }
}