/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    
 public int CountNodes(TreeNode root) 
 {
	if(root == null)
	{
		return 0;
	}
		
	var leftH = LeftDepth(root.left);
	var rightH = RightDepth(root.right);

	if(leftH == rightH){
		return (int)Math.Pow(2, leftH + 1) - 1;
	}
	else{
		return CountNodes(root.left) + CountNodes(root.right) + 1;
	}
 }
    public int LeftDepth(TreeNode node){
		var h = 0;
		while(node != null){
			node = node.left;
			h++;
		}
		return h;
    }
	
	public int RightDepth(TreeNode node){
		var h = 0;
		while(node != null){
			node = node.right;
			h++;
		}
		return h;
	}
    
}