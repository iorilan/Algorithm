题目描述：
Given a sorted linked list, delete all nodes that have duplicate numbers, leaving only distinct numbers from the original list.

For example,
Given 1->2->3->3->4->4->5, return 1->2->5.
Given 1->1->1->2->3, return 2->3.

删除链表中有重复的元素，本题需要的是完全删除重复的元素，而不是保留一份，比如对于链表做重复元素删除：1-1-2-3，删除后为2-3，而不是1-2-3。

思路：
1. 遍历一次存重复的元素，存哈希。重复元素的判断：
p.val == p.next.val
2. 再遍历一次跳过重复元素即可。


实现代码：

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     public int val;
 *     public ListNode next;
 *     public ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode DeleteDuplicates(ListNode head) 
    {
        if(head == null){
    		return null;
    	}
    	var hash = new Dictionary<int, bool>();
    	var p = head;
    	while(p.next != null){
    		if(p.val == p.next.val){
    			if(!hash.ContainsKey(p.val)){
    				hash.Add(p.val, true);
    			}
    		}
    		p = p.next;
    	}
    	
    	var q = head;
    	ListNode h = null;
    	ListNode h2 = null;
    	while(q != null){
    		if(!hash.ContainsKey(q.val)){
    			if(h == null){
    				h = new ListNode(q.val);
    				h2 = h;
    			}
    			else{
    				h.next = new ListNode(q.val);
    				h = h.next;
    			}
    		}
    		q = q.next;
    	}
    	
    	return h2;    
    }
}